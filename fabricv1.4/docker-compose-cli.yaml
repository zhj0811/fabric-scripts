# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

#volumes:
#  orderer2.example.com:

services:
  orderer.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.example.com
    container_name: orderer.example.com

#  orderer2.example.com:
#    extends:
#      file: base/peer-base.yaml
#      service: orderer-base
#    container_name: orderer2.example.com
#    volumes:
#        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/:/var/hyperledger/orderer/tls
#        - orderer2.example.com:/var/hyperledger/production/orderer
#    ports:
#    - 8050:7050
#
#  orderer3.example.com:
#    extends:
#      file: base/peer-base.yaml
#      service: orderer-base
#    container_name: orderer3.example.com
#    volumes:
#        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp:/var/hyperledger/orderer/msp
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/:/var/hyperledger/orderer/tls
#    ports:
#    - 9050:7050

#  orderer4.example.com:
#    extends:
#      file: base/peer-base.yaml
#      service: orderer-base
#    container_name: orderer4.example.com
#    volumes:
#        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/msp:/var/hyperledger/orderer/msp
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/:/var/hyperledger/orderer/tls
#    ports:
#    - 10050:7050
#
#  orderer5.example.com:
#    extends:
#      file: base/peer-base.yaml
#      service: orderer-base
#    container_name: orderer5.example.com
#    volumes:
#        - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/msp:/var/hyperledger/orderer/msp
#        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/:/var/hyperledger/orderer/tls
#    ports:
#    - 11050:7050

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    depends_on:
      - couchdb

#  peer1.org1.example.com:
#    container_name: peer1.org1.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer1.org1.example.com
#
#  peer0.org2.example.com:
#    container_name: peer0.org2.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer0.org2.example.com

#  peer1.org2.example.com:
#    container_name: peer1.org2.example.com
#    extends:
#      file:  base/docker-compose-base.yaml
#      service: peer1.org2.example.com

#  cli:
#    container_name: cli
#    image: hyperledger/fabric-tools:1.4
#    stdin_open: true
#    environment:
#      - GOPATH=/opt/gopath
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      - FABRIC_LOGGING_SPEC=DEBUG
#      - CORE_PEER_ID=cli
#      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
#      - CORE_PEER_LOCALMSPID=Org1MSP
#      - CORE_PEER_TLS_ENABLED=true
#      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
#    command: /bin/bash
#    volumes:
#        - /var/run/docker.sock/:/host/var/run/docker.sock
#        - ./chaincode/:/opt/gopath/src/chaincode
#        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
#        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
#        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
#    depends_on:
#      - orderer.example.com
#      - peer0.org1.example.com
#      - peer1.org1.example.com
#      - peer0.org2.example.com
#      - peer1.org2.example.com

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
